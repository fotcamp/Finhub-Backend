plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'fotcamp'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	// swagger
	implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0")

	// ⭐ Spring boot 3.x이상에서 QueryDsl 패키지를 정의하는 방법
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// OpenAPI 서드파티 라이브러리
	implementation 'com.theokanning.openai-gpt3-java:service:0.12.0'

	// 운영 환경 mariadb
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

	// Configuring the Annotation Processor
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	// AWS S3 연동
	implementation 'io.awspring.cloud:spring-cloud-aws-s3:3.0.2'

	// Spring Security Lib & jwt
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// ModelMapper
	implementation group: 'org.modelmapper', name: 'modelmapper' , version: '2.4.2'

	// OAuth2.0 client lib
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// FCM
	implementation 'com.google.firebase:firebase-admin:9.2.0'

	// Sentry
	implementation 'io.sentry:sentry-spring-boot-starter-jakarta:7.10.0'

	// bouncy castle
	implementation 'org.bouncycastle:bcprov-jdk15on:1.70'
	implementation 'org.bouncycastle:bcpkix-jdk15on:1.70'

}

def querydslSrcDir = 'src/main/generated'
clean {
	delete file(querydslSrcDir)
}
tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(querydslSrcDir)
}

tasks.named('test') {
	useJUnitPlatform()
}

jar{
	enabled = false
}
