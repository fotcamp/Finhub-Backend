name: Development Deployment
env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: finhub-backend
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  EC2_HOST: ${{ secrets.EC2_HOST }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  EC2_SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  SERVICE_NAME: api
on:
  push:
    branches:
      - feature/build
jobs:
  Deploy-Development:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Generate Application.yaml File
        run: |
          mkdir ./src/main/resources
          echo "${{ secrets.APPLICATION_DEV }}" > ./src/main/resources/application.yaml

      - name: Generate sql File
        run: |
          echo "${{ secrets.SQL_DATA_DEV }}" > ./src/main/resources/data.sql

      - name: create-json
        id: create-json
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "finhub-firebase-adminsdk.json"
          json: ${{ secrets.FCM_SETTING }}
          dir: "./src/main/resources/"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}

        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:latest"

      - name: Deploy on EC2 instance
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ env.EC2_HOST }}
          username: ubuntu
          key: ${{ env.EC2_SSH_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/finhub
            aws configure set aws_access_key_id ${{ env.AWS_ACCESS_KEY_ID }}
            aws configure set aws_secret_access_key ${{ env.AWS_SECRET_ACCESS_KEY }}
            aws configure set region ${{ env.AWS_REGION }}
            ECR_REGISTRY_LOGIN=$(aws ecr get-login-password --region ${{ env.AWS_REGION }} | sudo docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }})
            sudo docker-compose stop ${{ env.SERVICE_NAME }}
            sudo docker-compose rm -f ${{ env.SERVICE_NAME }}
            sudo docker-compose pull ${{ env.SERVICE_NAME }}
            sudo docker-compose up -d ${{ env.SERVICE_NAME }}

      - name: Send Slack Message
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: workflow,job,commit,repo,author,took,ref
        env:
          SLACK_WEBHOOK_URL: ${{ env.SLACK_WEBHOOK_URL }}
        if: always()
